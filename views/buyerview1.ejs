<!doctype html>
<html ng-app="userModel">
<head>
<meta charset="utf-8" />
<meta name="viewport" content="user-scalable=no, initial-scale=1.0, maximum-scale=1.0, width=device-width" />

<!-- Latest compiled and minified CSS -->
<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.1/css/bootstrap.min.css">
<!-- Optional theme -->
<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.1/css/bootstrap-theme.min.css">
<script>
    var pageData = <%- JSON.stringify(feedback)%>;
    </script>

<style>
html body {
    background-image: url('http://ir.ebaystatic.com/pictures/aw/pics/cmp/ds3/imgbg.jpg');
}
html, body, h1, h2, h3, li, button, input, select, textarea {
    color: #333;
    font-family: "Helvetica neue",Helvetica,Arial,sans-serif;
}
body{
    font-family: "Helvetica Neue",Helvetica,Arial,sans-serif;
    font-size: 14px;
    line-height: 20px;
    color: #333;
}
a, a:active, a:link, a:visited, .anchor {
    color: #0654BA;
    text-decoration: none;
}
.logo{
    padding:10px;

}

img{
    max-width: 100%;
    height: auto;
    vertical-align: middle;
    border: 0px none;
}
}
@media(max-width:767px){
    .logo img{
        height:35px;
        padding:5px 5px 3px;
    }
}
.mbm50{
    margin-bottom:40px !important;
}
.navbar-inverse{
    background: #fff !important;
    border:0px none !important;
    border-bottom:1px solid #ddd !important;
}
.sub_view {
    border: 1px solid #DDD;
    border-radius: 3px;
    background-color: white;
    box-shadow: 4px 4px 1px #EEE;
    margin-bottom: 20px;
    padding: 10px;
}

div.dbTableView{
    width:100%;
    line-height:100%;
    font-size:12px;
}

div.dbTableView .dhead{
    border-bottom:1px solid #ddd;
    margin-bottom:10px;
}

div.dbTableView .icon .feedback{
    padding-left:18px;
    background:url(http://q.ebaystatic.com/aw/pics/icon/iconPos_16x16.gif) no-repeat left 2px;
    background-size: 12px 12px;
}
div.dbTableView .icon .feedback.negative{
    background:url(http://q.ebaystatic.com/aw/pics/icon/iconNeg_16x16.gif) no-repeat left 2px;
    background-size: 12px 12px;
}
div.dbTableView .icon .feedback.neutral{
    background:url(http://p.ebaystatic.com/aw/pics/icon/iconNeu_16x16.gif) no-repeat left 2px;
    background-size: 12px 12px;
}
div.dbTableView .buyer_star{
    padding-top:1px;
}
div.dbTableView .buyer_star img{
    width:20px; height:20px; vertical-align:middle position:relative;top:-1px;
}

div.dbTableView .offers{
    position:absolute;
    right:5px;
    top:5px;
    min-width:100px;
    text-align:right;
}

div.dbTableView .ditems{
    border:1px solid #dedede;
    border-radius:5px;
    margin-bottom:10px;
    position:relative;
    padding:5px;
    vertical-align:top;
}
div.dbTableView div{
    padding:3px 0px;
}

@media only screen and (min-width : 320px) and (max-width : 480px) {
    div.dbTableView .icon div{
        width:200px;
        text-overflow: ellipsis;
        white-space:nowrap;
        overflow:hidden;
    }
    div.dbTableView .icon{
        background-size: 10px 10px;
        padding-left:5px;
    }
    div.dbTableView .icon .price{
        display:block;
    }
}
@media only screen and (min-width : 320px) and (max-width : 480px) {
    div.dbTableView .offers{
        min-width:60px;
    }
}

.filter *{
    font-size:11px;
    height:auto;
    
}
.filter input.form-control{
    width:25%;
    float:right;
}
@media only screen and (min-width : 320px) and (max-width : 480px) {
    .filter input.form-control{
        width:100%;
        float:none;
    }
    .filter_group .span5{
        float:none;
        display:block;
        width:100%;
        margin-bottom:10px;
        
    }
}
.filter_group{
    margin-bottom:20px;
}
.filter_group .span5{
    float:left;font-weight:bold;font-size:11px;
}

.offers .green, .offers .blue{
    padding:2px 4px;
    color:#fff;
    border-radius:2px;
    font-size:11px;
}
.offers .green{
    background-color:green;
    width:40px;
    display:inline-block;
}
.offers .blue, .offers .green{
    background-color:gray;
    width:40px;
    display:inline-block;
    text-align:center;
}
body .modal-dialog{
    /* new custom width */
    width: 800px;
  
}
</style>
</head>
<body>
<form name="feedbackForm">
<nav class="navbar navbar-inverse" role="navigation">
<div class="container">
<div class="header">
<div class="logo"><a href="http://www.ebay.com/"><img src="http://ir.ebaystatic.com/pictures/aw/pics/logos/logoEbayNew.png" alt="eBay logo" border="0"></a></div>
</div>

</div>
</nav>
<div class="container" ng-controller="userController" >


<div class="sub_view mbm50">
    <div ng-include="'../dataView1'"></div>
</div>
<div class="sub_view">
    <div ng-include="'../graphView1'"></div>
</div>
</div>
</form>

<!-- Button trigger modal -->



<div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">&times;</span><span class="sr-only">Close</span></button>
        <h4 class="modal-title" id="myModalLabel">Revise feedback</h4>
      </div>
      <div class="modal-body">
         <iframe src="/leavefeedback" width="700" height="400" frameborder="0" allowtransparency="true"></iframe>        </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
      
      </div>
    </div>
  </div>
</div>


<!-- Load jQuery, BootStrap and AngularJS from the CDN. -->
<script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/angularjs/1.0.4/angular.min.js"></script>
<script src="https://code.jquery.com/jquery-2.1.1.min.js"></script>
<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.1/js/bootstrap.min.js"></script>



<!-- Load the app module and its classes. -->
<script type="text/javascript">
 
var userApp = angular.module('userModel', []);

        
userApp.controller('userController', function ($scope, feedbackService) {
                   $scope.feedback = "Feedback revised";
                   $scope.name = "From Buyers";
                   $scope.offers = "Offers";
                   
                   //loadRemoteData();
                   $scope.dataItems = pageData;
                   
                   function loadRemoteData() {
                        feedbackService.getSellerView().then( function( data ) {
                                                             console.log(data);
                             $scope.dataItems = data;
                        });
                   }
                   $scope.show_discount = false;
                   $scope.show_refund = false;
                   
                   $scope.sendOffer = function(id){
                    var data, that = $('#'+id), refund = that.prev(), discount = refund.prev();
                        data = 'fid='+id+'&discount='+discount.val()+'&offer_info=dicsount&offer_sent=Yes&offer_status=pending&refund_amount';
                   feedbackService.updateInfo(data).then( function( data ) {
                                                        console.log(data);
                                                       
                                                        });
                   }
                   
                   $scope.acceptOffer = function(id){
              
                    // alert(id);
                     io.socket.get('/feedbackcurator/acceptoffer/',
                    {"fid":id});
                    $('#myModal').modal('show');
                       $("#"+id).addClass("disabled");
                    




                   }
                 
                   
                   });
                   
                   
                   userApp.service("feedbackService",
                               function( $http, $q ) {
                               
                               // Return public API.
                               return({
                                      getBuyerView: getBuyerView,
                                      getSellerView: getSellerView,
                                      getBuyerFeedback: getBuyerFeedback,
                                      updateInfo: updateInfo
                                      });
                               
                               
                               // ---
                               // PUBLIC METHODS.
                               // ---
                               
                               
                              
                                   function updateInfo( data ) {
                                   
                                   var request = $http({
                                                       method: "get",
                                                       url: "http://localhost:1337/feedbackcurator/sendoffer?" + data,
                                                       params: {
                                                       action: "get"
                                                       },
                                                       data: {
                                                       name: data
                                                       }
                                                       });
                                   
                                   return( request.then( handleSuccess, handleError ) );
                                   
                                   }
                                   
                               function getBuyerView( id ) {
                               
                               var request = $http({
                                                   method: "get",
                                                   url: "http://localhost:1337/feedbackcurator/buyerview?bid=android_bot",
                                                   params: {
                                                    action: "get"
                                                   },
                                                   data: {
                                                   name: ''
                                                   }
                                                   });
                               
                               return( request.then( handleSuccess, handleError ) );
                               
                               }
                                   
                               function getSellerView( id ) {
                                   
                                   var request = $http({
                                                       method: "get",
                                                       url: "http://localhost:1337/feedbackcurator/sellerview?sid=toysrus",
                                                       params: {
                                                       action: "get"
                                                       },
                                                       data: {
                                                       name: ''
                                                       }
                                                       });
                                   
                                   return( request.then( handleSuccess, handleError ) );
                                   
                                   }
                               
                               
                               // I get all of the friends in the remote collection.
                               function getBuyerFeedback( id ) {
                               
                               var request = $http({
                                                   method: "get",
                                                   url: "http://localhost:1337/feedback/viewfeed?fid=" + id,
                                                   params: {
                                                   action: "get"
                                                   }
                                                   });
                               
                               return( request.then( handleSuccess, handleError ) );
                               
                               }
                               
                               
                                   
                               // ---
                               // PRIVATE METHODS.
                               // ---
                               
                               
                               // I transform the error response, unwrapping the application dta from
                               // the API response payload.
                               function handleError( response ) {
                               
                               // The API response from the server should be returned in a
                               // nomralized format. However, if the request was not handled by the
                               // server (or what not handles properly - ex. server error), then we
                               // may have to normalize it on our end, as best we can.
                               if (
                                   ! angular.isObject( response.data ) ||
                                   ! response.data.message
                                   ) { return( $q.reject( "An unknown error occurred." ) );  }
                               
                               // Otherwise, use expected error message.
                               return( $q.reject( response.data.message ) );
                               
                               }
                               
                               
                               // I transform the successful response, unwrapping the application data
                               // from the API response payload.
                               function handleSuccess( response ) { return( response.data );  }
                               
                               });
                               



                               window.onload = function subscribeAndListen(){
    // When the document loads, send a request to users.handleoffers
    // The controller code will subscribe you to the model 'users'
    io.socket.get('/feedbackcurator/sendoffer/');
   // io.socket.get('/feedbackcurator/acceptoffer/');

    // Listen for the event called 'user' emited by the publishCreate() method.
    io.socket.on('feedbackcurator',function(obj){
      if (obj.verb == 'created') {
         var data = obj.data;
         if(data.type == "sendoffer"){
             alert("send offer triggered!!");
         } 
      }
    });
};
          



</script>


</body>
</html>